
# TODO: Create jobs for other virtual environments
#   Eval plugins, but if not support as desired create jobs
#   node.js, ruby,
- job:
    # TODO:
    #   New args: global/local(workspace) venv location (figure out how), purge(t/f) remove venv first
    #   If python version changes for venv, rm and recreate
    name: Tool-Python
    project-type: freestyle
    description: Setup PyEnv, PyEnv-virtualenv, Python version, and virtual environment
    defaults: global
    parameters:
      - string:
          name: python_ver
          default: "2.7.11"
          description: "Python version to ensure is available"
      - string:
          name: venv
          default: test-env
          description: "Python virtual environment to ensure is available"
    properties:
      - 'custom-icon':
          custom-icon: tools.png
      - sidebar:
          url: https://www.python.org
          text: Python Site
          icon: /userContent/customIcon/python-page.png
      - sidebar:
          url: http://www.tutorialspoint.com/python/
          text: Python Tutorial
          icon: /userContent/customIcon/python-page.png
      - sidebar:
          url: http://www.learnpython.org
          text: Python Interactive Tutorial
          icon: /userContent/customIcon/python-page.png
      - sidebar:
          url: https://github.com/yyuu/pyenv
          text: PyEnv Repo
          icon: /userContent/customIcon/python-page.png
      - sidebar:
          url: https://github.com/yyuu/pyenv-virtualenv
          text: PyEnv-virtualenv Repo
          icon: /userContent/customIcon/python-page.png
      - sidebar:
          url: https://virtualenv.pypa.io/en/latest/
          text: Virtualenv Documentation
          icon: /userContent/customIcon/python-page.png
    builders:
      - 'python-setup':

- job:
    name: Tool-Python-Cleanup
    project-type: freestyle
    description: Remove PyEnv directory. Improve later to have options to remove specific items
    defaults: global
    # TODO: ? turn on concurent builds allowed
    parameters:
      - node:
          name: NODE
          description: "Select node to remove Python from"
          allow-multiselect: true
          ignore-offline-nodes: true
    properties:
      - 'custom-icon':
          custom-icon: tools.png
    builders:
      - 'python-cleanup':

- job:
    name: Tool-Python-Example
    project-type: freestyle
    description: Example of using a Python virtual environment
    defaults: global
    # TODO: make work on slaves
    node: master
    parameters:
      - string:
          name: python_ver
          default: "2.7.10"
          description: "Python version to ensure is available"
      - string:
          name: venv
          default: test-env
          description: "Python virtual environment to ensure is available"
    properties:
      - 'custom-icon':
          custom-icon: python-page.png
    builders:
      - trigger-builds:
        - project: "Tool-Python"
          block: true
          same-node: true
          # FIX: parameters need to be on seperate lines to work
          predefined-parameters: |
            python_ver=$python_ver
            venv=$venv
      - shell: |
          set +x
          if [ -d "${JENKINS_HOME}" ]; then
            # or [ "${NODE_NAME}" = "master" ]
            home=${JENKINS_HOME}
          else
            home=${HOME}
          fi
          export PYENV_ROOT="${home}/.pyenv"
          export PATH="${PYENV_ROOT}/bin:${PATH}"
          
          ## Initialize PyEnv and virtualenv
          eval "$(pyenv init -)"
          eval "$(pyenv virtualenv-init -)"
          export PYENV_VIRTUALENV_DISABLE_PROMPT=1
          
          pyenv activate "${venv}"
          
          ## Validate
          echo "PyEnv Versions"
          pyenv versions
          echo "Current Versions:"
          pyenv version
          python --version
          pip --version
          echo "Virtual Envs:"
          pyenv virtualenvs

