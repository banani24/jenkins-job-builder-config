- job-template:
    name: "{project}-{nameRepo}+{appEnv}+Package_Docker"
    # name: "{project}-{name}_analysis_Docker_{github-branch}"
    defaults: global
    description: |
      Create ECR repo, build Docker image, tag, and push to registry
      <p><b>This job is managed by JJB and will be overwritten.</b></p>
      <p><b>Do not edit this job through the web</b></p>
      lint:ignore:HardcodedScriptChecker
    node: slave
    properties:
      - github:
          url: "{github-url}/{github-org}/{github-repo}"
      - 'custom-icon':
          custom-icon: docker.png
      # Setup sidebars for Docker and test tools
    scm:
      - 'github':
          github-url: "{github-url}"
          github-org: "{github-org}"
          github-repo: "{github-repo}"
    builders:
      - 'inject-home':
      - inject:
          properties-content: |
            AWS_DEFAULT_REGION={aws-region}
      - shell: |
          # Setup args for calling Create AWS ECR job
          GIT_URL="${{GIT_URL%.git}}"
          image="${{GIT_URL##*/}}"
          mkdir -p tmp
          cat <<ARGS > tmp/parameters-ecr.properties
          image_name=${{image}}
          namespace=${{namespace}}
          aws_region={aws-region}
          aws_RO_accounts={aws-ecr-RO-accounts}
          ARGS
      - trigger-builds:
        # Create AWS ECR image repo
        - project: "{project}-{name}_validate_Docker"
          property-file: $WORKSPACE/tmp/parameters-ecr.properties
          property-file-fail-on-missing: true
          block: true
          node-label: python-ansible && slave
      - shell: |
          export AWS_REGION={aws-region}
          build_push-docker.sh

    publishers:
      - 'pragmatic-programmer-tips':
      - 'email-template':
          email-template: emailext-template-global-default
      - slack:

    wrappers:
      - ansicolor
      - 'build-timeout':
          timeout: 180
      - 'inject-home':
      - timestamps


# Split into 3 jobs: analysis, package, validate

- job-template:
    name: "{project}-{name}_analysis_Docker"
    # name: "{project}-{name}_analysis_Docker_{github-branch}"
    defaults: global
    description: |
      <p><b>This job is managed by JJB and will be overwritten.</b></p>
      <p><b>Do not edit this job through the web</b></p>
      lint:ignore:HardcodedScriptChecker
    node: "{node}"
    properties:
      - github:
          url: "{github-url}/{github-org}/{github-repo}"
      #- 'custom-icon':
      #    custom-icon: xxx.png
      # Setup sidebars for Docker and test tools
      #- 'sidebar-python':
      #- 'sidebar-python-analysis':
    scm:
      #- 'github-branch-credentials':
      - 'github-credentials':
          github-url: "{github-url}"
          github-org: "{github-org}"
          github-repo: "{github-repo}"
          #github-branch: "{github-branch}"
          github-cred: "{github-cred}"
    builders:
      - 'inject-home':
      - 'build-docker-pre':
      - 'static-analysis-dockerfile':
      - 'dockerbuilder-build':
          repoName: "{github-org}/{github-repo}"
          dockerfilePath: ./Dockerfile
          buildArgs: '${{FILE,path=&quot;tmp/dockerBuildArgs&quot;}}'
      - 'static-analysis-docker-image':
      #- 'build-docker-tracking':
      - shell: |
          echo " === Start docker push ==="
          AWS_REGION=us-west-2
          AWS_ECR="dkr.ecr.${{AWS_REGION}}.amazonaws.com"
          AWS_ID=111111111111
          HOME=$WORKSPACE
          #env | sort
          mkdir -p .aws
          cd .aws
          cat <<"CONFIG" > config
          [profile ECR]
          region = us-west-2
          CONFIG
          cat <<"CRED" > credentials
          [ECR]
          aws_access_key_id = XXX
          aws_secret_access_key = XXX
          CRED
          cd $WORKSPACE
          docker tag {github-org}/{github-repo} ${{AWS_ID}}.${{AWS_ECR}}/{github-org}/{github-repo}:latest
          cmd=$(aws ecr get-login --profile ECR)
          $cmd
          docker push ${{AWS_ID}}.${{AWS_ECR}}/{github-org}/{github-repo}
      #- 'dockerbuilder-publish':
      #    repoName: {github-repo}
      #    repoTag: latest
      #    regURL:
      #    regCredentials:
    publishers:
      - 'pragmatic-programmer-tips':
      - warnings:
          workspace-file-scanners:
            - file-pattern: 'reports/dockerfile-lint-*.warnings'
              scanner: 'Custom-dockerfile-lint'
            - file-pattern: 'reports/analysis-*.warnings'
              scanner: 'Custom-hyperclair'
            - file-pattern: 'reports/lynis-*.dat'
              scanner: 'Custom-lynis'
            - file-pattern: 'reports/whale-linter.warnings'
              scanner: 'Custom-whale-linter'
          run-always: true
      - html-publisher:
          name: 'Hyperclair Vulnerability Reports'
          dir: 'reports/html/'
          files: 'analysis-*.html'
      #- 'anchorchain':
      #    anchorchain-file: anchor
      #- 'email-template':
      #    email-template: emailext-template-1460666142913
      #- 'hipchat':
      #    hipchat-token: "{hipchat-token}"
      #    hipchat-room-id: "{hipchat-room-id}"
#      - trigger-parameterized-builds:
#          project: "{project}-{name}_package_Docker"
#          condition: 'STABLE'
#          property-file: $WORKSPACE/parameters.txt
#          fail-on-missing: true
    triggers:
      - pollscm:
          cron:  'H/10 * * * *'
    wrappers:
      #- 'project-desc':
      #    desc-file: project_description
      - 'build-name-setter':
          template: '${{FILE,path=&quot;tmp/buildName&quot;}}'
          runAtStart: false
          runAtEnd: true
      - 'build-timeout':
          timeout: 180
      - 'inject-home':
      #- credentials-binding:
      #    - username-password:
      #        credential-id: XXX
      #        username: AWS_USER
      #        password: AWS_PSWD
          #- amazon-web-services:
          #    credential-id: XXX
          #    access-key: AWS_ACCESS_KEY
          #    secret-key: AWS_SECRET_KEY
      - timestamps

- job-template:
    name: "{project}-{name}_package_Docker"
    defaults: global
    description: |
      <p><b>This job is managed by JJB and will be overwritten.</b></p>
      <p><b>Do not edit this job through the web</b></p>
      lint:ignore:HardcodedScriptChecker
    node: "{node}"
    properties:
      - github:
          url: "{github-url}/{github-org}/{github-repo}"
      #- 'custom-icon':
      #    custom-icon: xxx.png
      # Setup sidebars for Docker and test tools
    scm:
      #- 'github-branch-credentials':
      - 'github-credentials':
          github-url: "{github-url}"
          github-org: "{github-org}"
          github-repo: "{github-repo}"
          #github-branch: "{github-branch}"
    builders:
      - 'inject-home':
      - 'build-docker-pre':
      - 'dockerbuilder-build':
          repoName: "{github-org}/{github-repo}"
          dockerfilePath: ./Dockerfile
          buildArgs: '${{FILE,path=&quot;tmp/dockerBuildArgs&quot;}}'
      # create parameters.txt for next job
      #- 'build-docker-tracking':
    publishers:
      - 'pragmatic-programmer-tips':
      #- 'anchorchain':
      #    anchorchain-file: anchor
      #- 'email-template':
      #    email-template: emailext-template-1460666142913
      #- 'hipchat':
      #    hipchat-token: "{hipchat-token}"
      #    hipchat-room-id: "{hipchat-room-id}"
#      - trigger-parameterized-builds:
#          project: "{project}-{name}_validate_Docker"
#          condition: 'STABLE'
#          property-file: $WORKSPACE/parameters.txt
#          fail-on-missing: true
#          node-parameters: true
    wrappers:
      - 'build-timeout':
          timeout: 180
      - 'inject-home':
      - timestamps

- job-template:
    name: "{project}-{name}_validate_Docker"
    defaults: global
    description: |
      <p><b>This job is managed by JJB and will be overwritten.</b></p>
      <p><b>Do not edit this job through the web</b></p>
      lint:ignore:HardcodedScriptChecker
    node: "{node}"
    properties:
      - github:
          url: "{github-url}/{github-org}/{github-repo}"
      #- 'custom-icon':
      #    custom-icon: xxx.png
      # Setup sidebars for Docker and test tools
    builders:
      - 'inject-home':
      # ?? No Dockerfile, check what is needed and create script to generate
      #  - 'build-docker-pre':
      - 'static-analysis-docker-image':
      #- 'build-docker-tracking':
      #- 'dockerbuilder-publish':
      #    repoName:
      #    regURL:
      #    regCredentials:
    publishers:
      - 'pragmatic-programmer-tips':
      - warnings:
          workspace-file-scanners:
            - file-pattern: 'reports/dockerfile-lint-*.warnings'
              scanner: 'Custom-dockerfile-lint'
            - file-pattern: 'reports/analysis-*.warnings'
              scanner: 'Custom-hyperclair'
          run-always: true
      - html-publisher:
          name: 'Hyperclair Vulnerability Reports'
          dir: 'reports/html/'
          files: 'analysis-*.html'
      #- 'anchorchain':
      #    anchorchain-file: anchor
      #- 'email-template':
      #    email-template: emailext-template-1460666142913
      #- 'hipchat':
      #    hipchat-token: "{hipchat-token}"
      #    hipchat-room-id: "{hipchat-room-id}"
    wrappers:
      - 'build-timeout':
          timeout: 180
      - 'inject-home':
      - timestamps
