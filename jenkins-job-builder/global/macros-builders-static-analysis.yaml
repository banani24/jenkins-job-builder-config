# Macros for static analysis
#   documentation, syntax, style,

# Doc: pp, readme
# Style: pp
# Syntax: bash, erb, pp, puppetfile, rb, yaml
# Other: cloc, dependency-check, Dockerfile, docker images

#-----------------------------
# Check Documentation macros
#-----------------------------

- builder:
    name: doc-pp
    builders:
      - shell:
          !include-raw:
            - doc-pp.sh

- builder:
    name: doc-readme
    builders:
      - shell:
          !include-raw:
            - doc-readme.sh

#-----------------------------
# Static Code Analysis macros
#-----------------------------

- builder:
    name: static-analysis-c
    builders:
      - shell:
          !include-raw:
            - static-analysis-c.sh

- builder:
    name: static-analysis-docker-compose
    builders:
      - shell:
          !include-raw:
            - static-analysis-docker-compose.sh

- builder:
    name: static-analysis-dockerfile
    builders:
      - shell:
          !include-raw:
            - static-analysis-dockerfile.sh

- builder:
    name: static-analysis-docker-image
    builders:
      - shell:
          !include-raw:
            - static-analysis-docker-image.sh

- builder:
    name: static-analysis-python
    builders:
      - shell:
          !include-raw:
            - static-analysis-py.sh

- builder:
    name: cloc
    builders:
      - shell:
          !include-raw:
            - cloc.sh

- builder:
    name: dependency-check
    # Variables: data_dir, scan_path, out_dir, suppression_file,
    # Define absolute: disable NVD update
    builders:
      - raw:
          xml: |
            <org.jenkinsci.plugins.DependencyCheck.DependencyCheckBuilder plugin="dependency-check-jenkins-plugin@1.3.6">
              <skipOnScmChange>false</skipOnScmChange>
              <skipOnUpstreamChange>false</skipOnUpstreamChange>
              <scanpath>{scan_path}</scanpath>
              <outdir>{out_dir}</outdir>
              <datadir>{data_dir}</datadir>
              <suppressionFile>{suppression_file}</suppressionFile>
              <zipExtensions></zipExtensions>
              <isAutoupdateDisabled>true</isAutoupdateDisabled>
              <isVerboseLoggingEnabled>false</isVerboseLoggingEnabled>
              <includeHtmlReports>true</includeHtmlReports>
              <useMavenArtifactsScanPath>false</useMavenArtifactsScanPath>
            </org.jenkinsci.plugins.DependencyCheck.DependencyCheckBuilder>

- builder:
    name: dependency-check-updater
    # Variables: data_dir
    builders:
      - raw:
          xml: |
            <org.jenkinsci.plugins.DependencyCheck.DependencyCheckUpdateOnlyBuilder plugin="dependency-check-jenkins-plugin@1.3.6">
              <skipOnScmChange>false</skipOnScmChange>
              <skipOnUpstreamChange>false</skipOnUpstreamChange>
              <datadir>{data_dir}</datadir>
              <isVerboseLoggingEnabled>false</isVerboseLoggingEnabled>
            </org.jenkinsci.plugins.DependencyCheck.DependencyCheckUpdateOnlyBuilder>


#-----------------------------
# Check Style macros
#-----------------------------

- builder:
    name: style-pp
    builders:
      - shell:
          !include-raw:
            - style-pp.sh

#-----------------------------
# Check Syntax macros
#-----------------------------

- builder:
    name: syntax-bash
    builders:
      - shell:
          !include-raw:
            - syntax-bash.sh

- builder:
    name: syntax-erb
    builders:
      - shell:
          !include-raw:
            - syntax-erb.sh

- builder:
    name: syntax-pp
    builders:
      - shell:
          !include-raw:
            - syntax-pp.sh

- builder:
    name: syntax-py
    builders:
      - shell:
          !include-raw:
            - syntax-py.sh

- builder:
    name: syntax-puppetfile
    builders:
      - shell:
          !include-raw:
            - syntax-puppetfile.sh

- builder:
    name: syntax-rb
    builders:
      - shell:
          !include-raw:
            - syntax-rb.sh

- builder:
    name: syntax-yaml
    builders:
      - shell:
          !include-raw:
            - syntax-yaml.sh

#-----------------------------
# Unit test  macros
#-----------------------------
#- builder:
#    name: unittest-puppet
