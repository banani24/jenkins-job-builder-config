
# looking at source code. Don't think raw can work for axes
#- axis:
#    name: elastic
#    # Variables: axis, label, skip_offline
#    # This plugins looks up the nodes that have the label and adds them to the config
#    # So this might not work
#    axes:
#      - raw:
#          xml: |
#            <org.jenkinsci.plugins.elasticaxisplugin.ElasticAxis plugin="elastic-axis@1.2">
#              <name>{axis}</name>
#              <label>{label}</label>
#              <ignoreOffline>{skip_offline}</ignoreOffline>
#            </org.jenkinsci.plugins.elasticaxisplugin.ElasticAxis>

- builder:
    name: anchorchain-file
    # Variables: anchorchain-links
    builders:
      - shell:
          !include-raw:
            - ./scripts/anchor-chain.sh

- builder:
    name: checkmarx
    # Variables: project, name, checkmarx-teamID, checkmarx-presetID, checkmarx-add-filters, checkmarx-excl-dirs
    # possible vars: comment
    # Do incremental scans with a full scan every 11 scans
    builders:
      - raw:
          xml: |
            <com.checkmarx.jenkins.CxScanBuilder plugin="checkmarx@8.0.1">
              <useOwnServerCredentials>false</useOwnServerCredentials>
              <serverUrl>https://checkmarx.company.com</serverUrl>
              <username>admin</username>
              <password>A1b2C3d4=</password>
              <projectName>{project}-{name}</projectName>
              <groupId>{checkmarx-teamID}</groupId>
              <projectId>0</projectId>
              <preset>{checkmarx-presetID}</preset>
              <presetSpecified>false</presetSpecified>
              <excludeFolders>doc,test,tests,reports-analysis{checkmarx-excl-dirs}</excludeFolders>
              <filterPattern>
            !**/_cvs/**/*, !**/.svn/**/*,   !**/.hg/**/*,   !**/.git/**/*,  !**/.bzr/**/*, !**/bin/**/*,
            !**/obj/**/*,  !**/backup/**/*, !**/.idea/**/*, !**/*.DS_Store, !**/*.ipr,     !**/*.iws,
            !**/*.bak,     !**/*.tmp,       !**/*.aac,      !**/*.aif,      !**/*.iff,     !**/*.m3u, !**/*.mid, !**/*.mp3,
            !**/*.mpa,     !**/*.ra,        !**/*.wav,      !**/*.wma,      !**/*.3g2,     !**/*.3gp, !**/*.asf, !**/*.asx,
            !**/*.avi,     !**/*.flv,       !**/*.mov,      !**/*.mp4,      !**/*.mpg,     !**/*.rm,  !**/*.swf, !**/*.vob,
            !**/*.wmv,     !**/*.bmp,       !**/*.gif,      !**/*.jpg,      !**/*.png,     !**/*.psd, !**/*.tif, !**/*.swf,
            !**/*.jar,     !**/*.zip,       !**/*.rar,      !**/*.exe,      !**/*.dll,     !**/*.pdb, !**/*.7z,  !**/*.gz,
            !**/*.tar.gz,  !**/*.tar,       !**/*.gz,       !**/*.ahtm,     !**/*.ahtml,   !**/*.fhtml, !**/*.hdm,
            !**/*.hdml,    !**/*.hsql,      !**/*.ht,       !**/*.hta,      !**/*.htc,     !**/*.htd,
            !**/*.htmls,   !**/*.ihtml,     !**/*.mht,      !**/*.mhtm,     !**/*.mhtml,   !**/*.ssi, !**/*.stm,
            !**/*.stml,    !**/*.ttml,      !**/*.txn,      !**/*.xhtm,     !**/*.xhtml,   !**/*.class, !**/*.iml,
            !**/*.cfg,     !**/*.dat,       !**/*.ini,      !**/*.md,       !**/*.o,       !**/*.pyc, !**/*.txt, !**/*.ico,
            !**/*.eot, !**/*.svg, !**/*.ttf, !**/*.woff, !**/*.woff2, !**/*.pem,
            !**/*.map, !**/*.json, !**/*.yaml,
            !**/.*, !flake8*, !bandit*{checkmarx-add-filters}
              </filterPattern>
              <incremental>true</incremental>
              <fullScansScheduled>true</fullScansScheduled>
              <fullScanCycle>10</fullScanCycle>
              <isThisBuildIncremental>false</isThisBuildIncremental>
              <sourceEncoding>1</sourceEncoding>
              <comment>
            Scan run from $BUILD_TAG
            $BUILD_URL

            Doesn&apos;t work. Nothing is showing up in Checkmarx
            </comment>
              <skipSCMTriggers>false</skipSCMTriggers>
              <waitForResultsEnabled>true</waitForResultsEnabled>
              <vulnerabilityThresholdEnabled>false</vulnerabilityThresholdEnabled>
              <highThreshold>0</highThreshold>
              <mediumThreshold>0</mediumThreshold>
              <lowThreshold>0</lowThreshold>
              <generatePdfReport>true</generatePdfReport>
              <jobStatusOnError>GLOBAL</jobStatusOnError>
              <vulnerabilityThresholdResult>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </vulnerabilityThresholdResult>
            </com.checkmarx.jenkins.CxScanBuilder>

- builder:
    # Cloudbees Docker Build and Publish - Build ONLY
    name: dockerbuilder-build
    # Variables: repoName, dockerfilePath, buildArgs
    # buildArgs: ${FILE,path=&quot;tmp/dockerBuildArgs&quot;}
    builders:
      - raw:
          xml: |
            <com.cloudbees.dockerpublish.DockerBuilder plugin="docker-build-publish@1.3.1">
              <server plugin="docker-commons@1.4.0"/>
              <registry plugin="docker-commons@1.4.0"/>
              <repoName>{repoName}</repoName>
              <noCache>false</noCache>
              <forcePull>false</forcePull>
              <dockerfilePath>{dockerfilePath}</dockerfilePath>
              <skipBuild>false</skipBuild>
              <skipDecorate>false</skipDecorate>
              <repoTag></repoTag>
              <skipPush>true</skipPush>
              <createFingerprint>true</createFingerprint>
              <skipTagLatest>false</skipTagLatest>
              <buildAdditionalArgs>{buildArgs}</buildAdditionalArgs>
              <forceTag>false</forceTag>
              <dockerToolName></dockerToolName>
            </com.cloudbees.dockerpublish.DockerBuilder>

- builder:
    # Cloudbees Docker Build and Publish - Publish ONLY
    name: dockerbuilder-publish
    # Variables: repoName, repoTag, regURL, regCredentials
    # regURL: https://<id>.dkr.ecr.us-west-2.amazonaws.com
    # regCred: ecr:8fcdc8ad-9fe4-420a-8bef-ac1a89a322f4
    builders:
      - raw:
          xml: |
            <com.cloudbees.dockerpublish.DockerBuilder plugin="docker-build-publish@1.3.1">
              <server plugin="docker-commons@1.4.0"/>
              <registry plugin="docker-commons@1.4.0">
                <url>{regURL}</url>
                <credentialsId>{regCredentials}</credentialsId>
              </registry>
              <repoName>{repoName}</repoName>
              <noCache>false</noCache>
              <forcePull>false</forcePull>
              <skipBuild>true</skipBuild>
              <skipDecorate>false</skipDecorate>
              <repoTag>{repoTag}</repoTag>
              <skipPush>false</skipPush>
              <createFingerprint>true</createFingerprint>
              <skipTagLatest>false</skipTagLatest>
              <buildAdditionalArgs></buildAdditionalArgs>
              <forceTag>false</forceTag>
              <dockerToolName></dockerToolName>
            </com.cloudbees.dockerpublish.DockerBuilder>

# DSL Builder does not work for targets. Use raw until this is fixed
#- builder:
#    name: dsl-target
#    builders:
#      - dsl:
#          target: {dsl-target}
#          ignore-existing: "false"
#          removed-job-action: "DISABLE"
#          removed-view-action: "DELETE"
#          lookup-strategy: "SEED_JOB"
- builder:
    name: dsl-target
    # Variables: dsl-target
    builders:
      - raw:
          xml: |
            <javaposse.jobdsl.plugin.ExecuteDslScripts plugin="job-dsl@1.35">
              <targets>{dsl-target}</targets>
              <usingScriptText>false</usingScriptText>
              <ignoreExisting>false</ignoreExisting>
              <removedJobAction>DISABLE</removedJobAction>
              <removedViewAction>DELETE</removedViewAction>
              <lookupStrategy>SEED_JOB</lookupStrategy>
              <additionalClasspath></additionalClasspath>
            </javaposse.jobdsl.plugin.ExecuteDslScripts>

- builder:
    name: get-rpm-version
    builders:
      - shell:
          !include-raw:
            - ./scripts/get-rpm-version.sh

- builder:
    name: job-description
    builders:
      - shell:
          !include-raw:
            - ./scripts/description.sh

- builder:
    name: puppet-module-job-description
    builders:
      - shell:
          !include-raw:
            - ./scripts/puppet-module-description.sh

- builder:
    name: puppet-module-param-downstream
    builders:
      - shell:
          !include-raw:
            - ./scripts/puppet-module-param-downstream.sh

- builder:
    name: remote-jjb-definition
    builders:
      - conditional-step:
          condition-kind: files-match
          include-pattern:
              -  "ci_data/jjb/*.yaml"
          condition-basedir: workspace
          steps:
            - trigger-builds:
              - project:
                  - "Jenkins_Job_Builder"
                current-parameters: false
                predefined-parameters:
                  remote_job_name=$JOB_NAME
                block: false

- property:
    name: custom-icon
    # Variables: custom-icon
    properties:
      - raw:
          xml: |
            <jenkins.plugins.jobicon.CustomIconProperty plugin="custom-job-icon@0.2">
              <iconfile>{custom-icon}</iconfile>
            </jenkins.plugins.jobicon.CustomIconProperty>

- publisher:
    name: anchorchain
    # Variables: anchorchain-file
    publishers:
      - raw:
          xml: |
            <ru.snowleos.jenkins.anchorchain.LinksPublisher plugin="AnchorChain@1.0">
              <name>{anchorchain-file}</name>
            </ru.snowleos.jenkins.anchorchain.LinksPublisher>

- publisher:
    name: dependency-check-macro
    # Variables: pattern, can-run-on-failed
    publishers:
      - raw:
          xml: |
            <org.jenkinsci.plugins.DependencyCheck.DependencyCheckPublisher plugin="dependency-check-jenkins-plugin@1.3.6">
              <healthy></healthy>
              <unHealthy></unHealthy>
              <thresholdLimit>low</thresholdLimit>
              <pluginName>[DependencyCheck] </pluginName>
              <defaultEncoding></defaultEncoding>
              <canRunOnFailed>{can-run-on-failed}</canRunOnFailed>
              <usePreviousBuildAsReference>false</usePreviousBuildAsReference>
              <useStableBuildAsReference>false</useStableBuildAsReference>
              <useDeltaValues>false</useDeltaValues>
              <thresholds plugin="analysis-core@1.76">
                <unstableTotalAll></unstableTotalAll>
                <unstableTotalHigh></unstableTotalHigh>
                <unstableTotalNormal></unstableTotalNormal>
                <unstableTotalLow></unstableTotalLow>
                <unstableNewAll></unstableNewAll>
                <unstableNewHigh></unstableNewHigh>
                <unstableNewNormal></unstableNewNormal>
                <unstableNewLow></unstableNewLow>
                <failedTotalAll></failedTotalAll>
                <failedTotalHigh></failedTotalHigh>
                <failedTotalNormal></failedTotalNormal>
                <failedTotalLow></failedTotalLow>
                <failedNewAll></failedNewAll>
                <failedNewHigh></failedNewHigh>
                <failedNewNormal></failedNewNormal>
                <failedNewLow></failedNewLow>
              </thresholds>
              <shouldDetectModules>false</shouldDetectModules>
              <dontComputeNew>true</dontComputeNew>
              <doNotResolveRelativePaths>false</doNotResolveRelativePaths>
              <pattern>{pattern}</pattern>
            </org.jenkinsci.plugins.DependencyCheck.DependencyCheckPublisher>

#- publisher:
#    name: email-general
#    # Variables:
#    publishers:
#      # May use templates because this isn't as flexible as the actual plugin
#      - email-ext:
#          # for pulling from a file
#          recipients: ${PROPFILE,file="ci_data/email.properties",property="always"}
#          subject: $PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS!
#          body: |
#            $PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS:
#
#            Check console output at $BUILD_URL to view the results.
#          always: false
#          aborted: true
#          failure: true
#          first-failure: true
#          fixed: true
#          improvement: true
#          not-built: true
#          regression: true
#          second-failure: true
#          still-failing: true
#          still-unstable: true
#          success: false
#          unstable: true
#          send-to:
#            - developers
#            - culprits
#      # Build raw macro to do what is desired
#      - raw:
#          xml: |
#            <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.40.5">
#            <recipientList>$DEFAULT_RECIPIENTS</recipientList>
#            <configuredTriggers>
#              <hudson.plugins.emailext.plugins.trigger.FailureTrigger>
#                <email>
#                  <recipientList></recipientList>
#                  <subject>$PROJECT_DEFAULT_SUBJECT</subject>
#                  <body>$PROJECT_DEFAULT_CONTENT</body>
#                  <recipientProviders>
#                    <hudson.plugins.emailext.plugins.recipients.DevelopersRecipientProvider/>
#                    <hudson.plugins.emailext.plugins.recipients.CulpritsRecipientProvider/>
#                  </recipientProviders>
#                  <attachmentsPattern></attachmentsPattern>
#                  <attachBuildLog>false</attachBuildLog>
#                  <compressBuildLog>false</compressBuildLog>
#                  <replyTo>$PROJECT_DEFAULT_REPLYTO</replyTo>
#                  <contentType>project</contentType>
#                </email>
#              </hudson.plugins.emailext.plugins.trigger.FailureTrigger>
#              <hudson.plugins.emailext.plugins.trigger.AlwaysTrigger>
#                <email>
#                  <recipientList>${PROPFILE,file=&quot;email.props&quot;,property=&quot;always&quot;}</recipientList>
#                  <subject>$PROJECT_DEFAULT_SUBJECT</subject>
#                  <body>$PROJECT_DEFAULT_CONTENT</body>
#                  <recipientProviders>
#                    <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
#                  </recipientProviders>
#                  <attachmentsPattern></attachmentsPattern>
#                  <attachBuildLog>false</attachBuildLog>
#                  <compressBuildLog>false</compressBuildLog>
#                  <replyTo>$PROJECT_DEFAULT_REPLYTO</replyTo>
#                  <contentType>project</contentType>
#                </email>
#              </hudson.plugins.emailext.plugins.trigger.AlwaysTrigger>
#            </configuredTriggers>
#            <contentType>default</contentType>
#            <defaultSubject>$DEFAULT_SUBJECT</defaultSubject>
#            <defaultContent>$DEFAULT_CONTENT</defaultContent>
#            <attachmentsPattern></attachmentsPattern>
#            <presendScript>$DEFAULT_PRESEND_SCRIPT</presendScript>
#            <attachBuildLog>false</attachBuildLog>
#            <compressBuildLog>false</compressBuildLog>
#            <replyTo>$DEFAULT_REPLYTO</replyTo>
#            <saveOutput>false</saveOutput>
#            <disabled>false</disabled>
#          </hudson.plugins.emailext.ExtendedEmailPublisher>


- publisher:
    name: email-template
    # Variables: email-template
    publishers:
      - raw:
          xml: |
            <org.jenkinsci.plugins.emailext__template.ExtendedEmailTemplatePublisher plugin="emailext-template@0.4">
              <templateIds>
                # Can have as many templates as desired
                <org.jenkinsci.plugins.emailext__template.TemplateId>
                  <templateId>{email-template}</templateId>
                </org.jenkinsci.plugins.emailext__template.TemplateId>
              </templateIds>
            </org.jenkinsci.plugins.emailext__template.ExtendedEmailTemplatePublisher>

# v0.1.9 not updated yet
#hipchat:
#  enabled: true
#  rooms: {hipchat-room-id}
#  notify-start: true
#  notify-success: true
#  notify-aborted: true
#  notify-not-built: true
#  notify-unstable: true
#  notify-failure: true
#  notify-back-to-normal: true

- publisher:
    name: hipchat-macro
    # Variables: hipchat-token, hipchat-room-id
    publishers:
      - raw:
          xml: |
            <jenkins.plugins.hipchat.HipChatNotifier plugin="hipchat@1.0.0">
              <token>{hipchat-token}</token>
              <room>{hipchat-room-id}</room>
              <notifications>
                <jenkins.plugins.hipchat.model.NotificationConfig>
                  <notifyEnabled>true</notifyEnabled>
                  <textFormat>false</textFormat>
                  <notificationType>STARTED</notificationType>
                  <color>YELLOW</color>
                  <messageTemplate></messageTemplate>
                </jenkins.plugins.hipchat.model.NotificationConfig>
                <jenkins.plugins.hipchat.model.NotificationConfig>
                  <notifyEnabled>true</notifyEnabled>
                  <textFormat>false</textFormat>
                  <notificationType>SUCCESS</notificationType>
                  <color>GREEN</color>
                  <messageTemplate></messageTemplate>
                </jenkins.plugins.hipchat.model.NotificationConfig>
                <jenkins.plugins.hipchat.model.NotificationConfig>
                  <notifyEnabled>true</notifyEnabled>
                  <textFormat>false</textFormat>
                  <notificationType>FAILURE</notificationType>
                  <color>RED</color>
                  <messageTemplate></messageTemplate>
                </jenkins.plugins.hipchat.model.NotificationConfig>
                # Other types: abort, back to normal, unstable, module not built
                # Colors: purple, gray, random
              </notifications>
              <startJobMessage>$JOB_NAME #$BUILD_NUMBER $STATUS ($CHANGES_OR_CAUSE) (&lt;a href=&quot;$URL&quot;&gt;Open&lt;/a&gt;)</startJobMessage>
              <completeJobMessage>$JOB_NAME #$BUILD_NUMBER $STATUS after $DURATION (&lt;a href=&quot;$URL&quot;&gt;Open&lt;/a&gt;)</completeJobMessage>
            </jenkins.plugins.hipchat.HipChatNotifier>

# Getting errors with this, so using raw for now
#      - trigger-parameterized-builds:
#          project: test
#          condition: STABLE
#          property-file: parameters.txt
- publisher:
    name: param-build-trigger-{project}
    # TODO: define lots of option - maybe many macros until plugin
    publishers:
      - raw:
          xml: |
            <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.27">
              <configs>
                <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
                  <configs class="empty-list"/>
                  <projects>{project}</projects>
                  <condition>SUCCESS</condition>
                  <triggerWithNoParameters>false</triggerWithNoParameters>
                </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
              </configs>
            </hudson.plugins.parameterizedtrigger.BuildTrigger>

- publisher:
    name: pragmatic-programmer-tips
    publishers:
      - raw:
          xml: |
            <jenkins.plugins.pragprog.PragprogBuildStep plugin="pragprog@1.0.4">
              <displayLanguageCode>en</displayLanguageCode>
              <indicateBuildResult>true</indicateBuildResult>
            </jenkins.plugins.pragprog.PragprogBuildStep>

- publisher:
    name: publishers-from
    # Variables: project
    publishers:
      - raw:
          xml: |
            <hudson.plugins.templateproject.ProxyPublisher plugin="template-project@1.4.2">
              <projectName>{project}</projectName>
            </hudson.plugins.templateproject.ProxyPublisher>

- scm:
    name: github
    # Variables: github-url, github-org, github-repo
    scm:
      - git:
          url: '{github-url}/{github-org}/{github-repo}.git'
          branches:
            - origin/master
          refspec: '+refs/heads/master:refs/remotes/origin/master'
          browser: githubweb
          browser-url: '{github-url}/{github-org}/{github-repo}'
          wipe-workspace: false
          skip-tag: true

- scm:
    name: github-branch-credentials
    # Variables: github-url, github-org, github-repo, github-cred, github-branch
    scm:
      - git:
          url: '{github-url}/{github-org}/{github-repo}.git'
          branches:
            - refs/remotes/origin/{github-branch}
          refspec: '+refs/heads/{github-branch}:refs/remotes/origin/{github-branch}'
          name: origin
          browser: githubweb
          browser-url: '{github-url}/{github-org}/{github-repo}/tree/{github-branch}'
          credentials-id: '{github-cred}'
          wipe-workspace: false
          skip-tag: true

- scm:
    name: github-credentials
    # Variables: github-url, github-org, github-repo, github-cred
    # this will be a case of github-branch-credentials with the branch set ?
    scm:
      - git:
          url: '{github-url}/{github-org}/{github-repo}.git'
          branches:
            - origin/master
          refspec: '+refs/heads/master:refs/remotes/origin/master'
          browser: githubweb
          browser-url: '{github-url}/{github-org}/{github-repo}'
          credentials-id: '{github-cred}'
          wipe-workspace: false
          skip-tag: true

- trigger:
    name: files-found-folder
    # Variables: cron, path, include
    triggers:
      - raw:
          xml: |
            <org.jenkinsci.plugins.fstrigger.triggers.FolderContentTrigger plugin="fstrigger@0.39">
              <spec>{cron}</spec>
              <path>{path}</path>
              <includes>{include}</includes>
              <excludeCheckLastModificationDate>false</excludeCheckLastModificationDate>
              <excludeCheckContent>false</excludeCheckContent>
              <excludeCheckFewerOrMoreFiles>false</excludeCheckFewerOrMoreFiles>
            </org.jenkinsci.plugins.fstrigger.triggers.FolderContentTrigger>

- wrapper:
    name: artifactory-generic-macro
    # Variables: release-repo, deploy-pattern
    wrappers:
      - raw:
          xml: |
            <org.jfrog.hudson.generic.ArtifactoryGenericConfigurator plugin="artifactory@2.4.7">
              <details>
                <artifactoryName>123456789@#1234567890123</artifactoryName>
                <artifactoryUrl>http://artifactory.company.com</artifactoryUrl>
                <deployReleaseRepository>
                  <keyFromText></keyFromText>
                  <keyFromSelect>{release-repo}</keyFromSelect>
                  <dynamicMode>false</dynamicMode>
                </deployReleaseRepository>
                <stagingPlugin/>
              </details>
              <resolverDetails>
                <artifactoryName>123456789@1234567890123</artifactoryName>
                <artifactoryUrl>http://artifactory.company.com</artifactoryUrl>
                <stagingPlugin/>
              </resolverDetails>
              <deployerCredentialsConfig>
                <credentials>
                  <username></username>
                  <password></password>
                </credentials>
                <credentialsId></credentialsId>
                <overridingCredentials>false</overridingCredentials>
              </deployerCredentialsConfig>
              <resolverCredentialsConfig>
                <credentials>
                  <username></username>
                  <password></password>
                </credentials>
                <credentialsId></credentialsId>
                <overridingCredentials>false</overridingCredentials>
              </resolverCredentialsConfig>
              <deployPattern>{deploy-pattern}</deployPattern>
              <resolvePattern></resolvePattern>
              <matrixParams>custom_prop=$PROJECT_ENV_VAR</matrixParams>
              <deployBuildInfo>true</deployBuildInfo>
              <includeEnvVars>true</includeEnvVars>
              <envVarsPatterns>
                <includePatterns></includePatterns>
                <excludePatterns></excludePatterns>
              </envVarsPatterns>
              <discardOldBuilds>false</discardOldBuilds>
              <discardBuildArtifacts>true</discardBuildArtifacts>
              <multiConfProject>false</multiConfProject>
            </org.jfrog.hudson.generic.ArtifactoryGenericConfigurator>

- wrapper:
    name: build-name-setter
    # Variables: template, runAtStart, runAtEnd
    # Template example: ${FILE,path=&quot;tmp/buildName&quot;}
    wrappers:
      - raw:
          xml: |
            <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@1.6.5">
              <template>{template}</template>
              <runAtStart>{runAtStart}</runAtStart>
              <runAtEnd>{runAtEnd}</runAtEnd>
            </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>

- wrapper:
    name: build-timeout
    # Variables: timeout
    wrappers:
      - timeout:
          timeout: '{timeout}'
          timeout-var: 'BUILD_TIMEOUT'
          fail: true

- wrapper:
    name: project-desc
    # Variables: desc-file
    wrappers:
      - raw:
          xml: |
            <org.jenkinsCi.plugins.projectDescriptionSetter.DescriptionSetterWrapper plugin="project-description-setter@1.1">
              <charset>UTF-8</charset>
              <projectDescriptionFilename>{desc-file}</projectDescriptionFilename>
              <disableTokens>false</disableTokens>
            </org.jenkinsCi.plugins.projectDescriptionSetter.DescriptionSetterWrapper>

- wrapper:
    name: pyenv
    # Variables: python_version,
    # Possible variables: pyenv_root, pip_list, git_branch, ignore_local, git_repo
    # TODO:
    #   change $HOME to $JENKINS_HOME
    wrappers:
      - raw:
          xml: |
            <ruby-proxy-object>
              <ruby-object ruby-class="Jenkins::Tasks::BuildWrapperProxy" pluginid="pyenv">
                <pluginid pluginid="pyenv" ruby-class="String">pyenv</pluginid>
                <object ruby-class="PyenvWrapper" pluginid="pyenv">
                  <pyenv__root pluginid="pyenv" ruby-class="String">$HOME/.pyenv</pyenv__root>
                  <pip__list pluginid="pyenv" ruby-class="String">tox</pip__list>
                  <pyenv__revision pluginid="pyenv" ruby-class="String">master</pyenv__revision>
                  <version pluginid="pyenv" ruby-class="String">{python_version}</version>
                  <ignore__local__version ruby-class="TrueClass" pluginid="pyenv"/>
                  <pyenv__repository pluginid="pyenv" ruby-class="String">https://github.com/yyuu/pyenv.git</pyenv__repository>
                </object>
              </ruby-object>
            </ruby-proxy-object>
